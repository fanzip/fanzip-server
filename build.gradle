plugins {
  id 'java'
  id 'war'
}

group 'org.example'
version '1.0-SNAPSHOT'

war {
    archiveFileName = 'fanzip-1.0-SNAPSHOT.war'
}

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
  lombokVersion = '1.18.30'
  springVersion = '5.3.37'
  springSecurityVersion='5.8.13'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  // Spring
  implementation ("org.springframework:spring-context:${springVersion}")
          { exclude group: 'commons-logging', module: 'commons-logging' }
  implementation "org.springframework:spring-webmvc:${springVersion}"
  implementation 'javax.inject:javax.inject:1'
  implementation 'org.yaml:snakeyaml:1.33'

  // Servlet
  compileOnly('javax.servlet:javax.servlet-api:4.0.1')
  compileOnly('javax.servlet.jsp:jsp-api:2.1')
  implementation('javax.servlet:jstl:1.2')

  // Test
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  testImplementation 'org.mockito:mockito-core:5.11.0'
  testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"
  testImplementation "org.mockito:mockito-junit-jupiter:5.8.0"
  testImplementation "org.assertj:assertj-core:3.25.3"

  // Logging
  implementation('org.slf4j:slf4j-api:2.0.9')
  runtimeOnly('org.slf4j:jcl-over-slf4j:2.0.9')
  runtimeOnly('org.slf4j:slf4j-log4j12:2.0.9')
  implementation('log4j:log4j:1.2.17')

  // Lombok
  compileOnly("org.projectlombok:lombok:${lombokVersion}")
  annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

  // 데이터베이스
  implementation 'com.mysql:mysql-connector-j:8.1.0'
  implementation 'com.zaxxer:HikariCP:2.7.4'
  implementation "org.springframework:spring-tx:${springVersion}"
  implementation "org.springframework:spring-jdbc:${springVersion}"
  implementation 'org.mybatis:mybatis:3.4.6'
  implementation 'org.mybatis:mybatis-spring:1.3.2'

  // 테스트
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  testImplementation("org.springframework:spring-test:${springVersion}")
  testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
  testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
  testImplementation 'javax.servlet:javax.servlet-api:4.0.1'
  implementation 'com.h2database:h2:2.1.214'
  testImplementation 'org.assertj:assertj-core:3.24.2'
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.springframework:spring-test:5.3.30'
  testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.9.3")


  //Redis
  implementation 'org.springframework.data:spring-data-redis:2.7.5'
  implementation 'redis.clients:jedis:3.9.0'
  implementation 'org.redisson:redisson-spring-boot-starter:3.23.4'

  //  Jackson (required for Swagger)
  implementation 'com.fasterxml.jackson.core:jackson-core:2.13.5'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.5'
  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.5'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.5'

  // Swagger
  implementation 'io.springfox:springfox-swagger2:2.9.2'
  implementation 'io.springfox:springfox-swagger-ui:2.9.2'

  //jjwt
  implementation("io.jsonwebtoken:jjwt-api:0.11.5")
  runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
//  implementation 'io.jsonwebtoken:jjwt:0.9.1'
  //jackson
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

  implementation 'org.yaml:snakeyaml:2.0'

  // JSON
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
  implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
  implementation 'com.googlecode.json-simple:json-simple:1.1.1' // TOSS

  // yml
  implementation 'org.yaml:snakeyaml:2.0'

//  보안
  implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
}

test {
  useJUnitPlatform()
}