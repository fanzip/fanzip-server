<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.fanzip.fancard.mapper.FancardMapper">

    <!-- Fancard ResultMap -->
    <resultMap id="fancardResultMap" type="org.example.fanzip.fancard.domain.Fancard">
        <id property="cardId" column="card_id"/>
        <result property="membershipId" column="membership_id"/>
        <result property="cardNumber" column="card_number"/>
        <result property="qrCode" column="qr_code"/>
        <result property="issueDate" column="issue_date"/>
        <result property="expiryDate" column="expiry_date"/>
        <result property="cardDesignUrl" column="card_design_url"/>
        <result property="isActive" column="is_active"/>
        <result property="registeredDeviceId" column="registered_device_id"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <!-- 멤버십 ID로 팬카드 목록 조회 -->
    <select id="findByMembershipId" parameterType="long" resultMap="fancardResultMap">
        SELECT card_id, membership_id, card_number, qr_code, issue_date, expiry_date, 
               card_design_url, is_active, registered_device_id, created_at
        FROM fan_cards
        WHERE membership_id = #{membershipId}
    </select>

    <!-- 카드 번호로 팬카드 조회 -->
    <select id="findByCardNumber" parameterType="string" resultMap="fancardResultMap">
        SELECT card_id, membership_id, card_number, qr_code, issue_date, expiry_date, 
               card_design_url, is_active, registered_device_id, created_at
        FROM fan_cards
        WHERE card_number = #{cardNumber}
    </select>

    <!-- QR 코드로 팬카드 조회 -->
    <select id="findByQrCode" parameterType="string" resultMap="fancardResultMap">
        SELECT card_id, membership_id, card_number, qr_code, issue_date, expiry_date, 
               card_design_url, is_active, registered_device_id, created_at
        FROM fan_cards
        WHERE qr_code = #{qrCode}
    </select>

    <!-- 여러 멤버십 ID의 활성 팬카드 목록 조회 -->
    <select id="findActiveCardsByMembershipIds" resultMap="fancardResultMap">
        SELECT card_id, membership_id, card_number, qr_code, issue_date, expiry_date, 
               card_design_url, is_active, registered_device_id, created_at
        FROM fan_cards
        <where>
            <if test="membershipIds != null and membershipIds.size() > 0">
                membership_id IN
                <foreach item="membershipId" collection="membershipIds" open="(" separator="," close=")">
                    #{membershipId}
                </foreach>
                AND is_active = true
            </if>
            <if test="membershipIds == null or membershipIds.size() == 0">
                1 = 0
            </if>
        </where>
    </select>

    <!-- 멤버십 ID의 활성 팬카드 조회 -->
    <select id="findActiveCardByMembershipId" parameterType="long" resultMap="fancardResultMap">
        SELECT card_id, membership_id, card_number, qr_code, issue_date, expiry_date, 
               card_design_url, is_active, registered_device_id, created_at
        FROM fan_cards
        WHERE membership_id = #{membershipId}
        AND is_active = true
        LIMIT 1
    </select>

    <!-- ID로 팬카드 조회 -->
    <select id="findById" parameterType="long" resultMap="fancardResultMap">
        SELECT card_id, membership_id, card_number, qr_code, issue_date, expiry_date, 
               card_design_url, is_active, registered_device_id, created_at
        FROM fan_cards
        WHERE card_id = #{cardId}
    </select>

    <!-- 팬카드 등록 -->
    <insert id="insert" parameterType="org.example.fanzip.fancard.domain.Fancard" useGeneratedKeys="true" keyProperty="cardId">
        INSERT INTO fan_cards (membership_id, card_number, qr_code, issue_date, expiry_date, 
                              card_design_url, is_active, registered_device_id)
        VALUES (#{membershipId}, #{cardNumber}, #{qrCode}, #{issueDate}, #{expiryDate}, 
                #{cardDesignUrl}, #{isActive}, #{registeredDeviceId})
    </insert>

    <!-- 팬카드 수정 -->
    <update id="updateCardDesignByInfluencerId"
            parameterType="org.example.fanzip.fancard.domain.Fancard">
        UPDATE FanCards
        SET card_design_url = #{cardDesignUrl}
        WHERE membership_id IN (
            SELECT membership_id
            FROM memberships
            WHERE influencer_id = #{influencerId}
        )
    </update>

    <!-- 팬카드 삭제 -->
    <delete id="delete" parameterType="long">
        DELETE FROM fan_cards
        WHERE card_id = #{cardId}
    </delete>

</mapper>