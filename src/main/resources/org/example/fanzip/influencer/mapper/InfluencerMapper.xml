<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.fanzip.influencer.mapper.InfluencerMapper">

    <resultMap id="InfluencerResultMap" type="org.example.fanzip.influencer.domain.InfluencerVO">
        <id column="influencer_id" property="influencerId"/>
        <result column="influencer_name" property="influencerName"/>
        <result column="category" property="category" javaType="org.example.fanzip.influencer.domain.enums.InfluencerCategory"/>
        <result column="profile_image" property="profileImage"/>
    </resultMap>

    <resultMap id="InfluencerDetailResultMap" type="org.example.fanzip.influencer.domain.InfluencerVO">
        <id column="influencer_id" property="influencerId"/>
        <result column="influencer_name" property="influencerName"/>
        <result column="category" property="category" javaType="org.example.fanzip.influencer.domain.enums.InfluencerCategory"/>
        <result column="profile_image" property="profileImage"/>
        <result column="fancard_image" property="fanCardImage"/>
        <result column="description" property="description"/>
    </resultMap>

    <select id="findAllFiltered" resultMap="InfluencerResultMap" parameterType="map">
        SELECT
        influencer_id, influencer_name, category, profile_image

        FROM influencers

        <where>
            <!--
            유저가 이미 구독중인 인플루언서는 제외하고 보여줌
            AND
            카테고리 필터링
             -->
            influencer_id NOT IN (
            SELECT influencer_id
            FROM memberships
            WHERE user_id = #{userId}
            )

            <if test="category != null">
                AND category = #{category}
            </if>
        </where>
    </select>


    <!-- 상세 조회 -->
    <select id="findDetailed" resultMap="InfluencerDetailResultMap" parameterType="long">
        SELECT influencer_id, influencer_name, category, profile_image, fancard_image, description
        FROM influencers
        WHERE influencer_id = #{influencerId}
    </select>

    <!-- 마이페이지: 프로필 조회 -->
    <select id="findProfile" resultMap="InfluencerDetailResultMap" parameterType="long">
        SELECT influencer_id, influencer_name, category, profile_image, fancard_image, description
        FROM influencers
        WHERE influencer_id = #{influencerId}
    </select>

    <!-- 마이페이지: 프로필 수정 -->
    <update id="updateProfile" parameterType="map">
        UPDATE influencers
        SET influencer_name = #{influencerName},
            description = #{description},
            category = #{category},
            updated_at = NOW()
        WHERE influencer_id = #{influencerId}
    </update>

    <!-- 마이페이지: 프로필 이미지 수정 -->
    <update id="updateProfileImage" parameterType="map">
        UPDATE influencers
        SET profile_image = #{profileImage},
            updated_at = NOW()
        WHERE influencer_id = #{influencerId}
    </update>

    <!-- 팬카드 이미지 수정 -->
    <update id="updateFanCardImageUrl" parameterType="map">
        UPDATE influencers
        SET fancard_image = #{fanCardImage},
            updated_at = NOW()
        WHERE influencer_id = #{influencerId}
    </update>

    <!-- 팬카드 이미지 조회 -->
    <select id="selectFanCardImageUrl" resultType="string" parameterType="long">
        SELECT fancard_image
        FROM influencers
        WHERE influencer_id = #{influencerId}
    </select>

    <!-- 프로필 이미지 조회 -->
    <select id="selectProfileImageUrl" resultType="string" parameterType="long">
        SELECT profile_image
        FROM influencers
        WHERE influencer_id = #{influencerId}
    </select>


    <!-- 일별 구독자 통계 -->
    <select id="getSubscriberStatsDaily" resultType="org.example.fanzip.influencer.dto.SubscriberStatsResponseDTO" parameterType="long">
        SELECT 
            DATE_FORMAT(CURDATE(), '%Y-%m-%d') as date,
            COALESCE(COUNT(m.membership_id), 0) as subscriberCount
        FROM (SELECT CURDATE() as today) d
        LEFT JOIN memberships m ON 
            DATE(m.subscription_start) = CURDATE()
            AND m.influencer_id = #{influencerId}
            AND m.status = 'ACTIVE'
    </select>

    <!-- 주별 구독자 통계 -->
    <select id="getSubscriberStatsWeekly" resultType="org.example.fanzip.influencer.dto.SubscriberStatsResponseDTO" parameterType="long">
        <![CDATA[
        WITH RECURSIVE week_days AS (
            SELECT DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY) as week_date
            UNION ALL
            SELECT DATE_ADD(week_date, INTERVAL 1 DAY)
            FROM week_days
            WHERE week_date < DATE_ADD(DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL 6 DAY)
        )
        SELECT 
            DATE_FORMAT(wd.week_date, '%Y-%m-%d') as date,
            COALESCE(COUNT(m.membership_id), 0) as subscriberCount
        FROM week_days wd
        LEFT JOIN memberships m ON 
            DATE(m.subscription_start) = wd.week_date
            AND m.influencer_id = #{influencerId}
            AND m.status = 'ACTIVE'
        GROUP BY wd.week_date
        ORDER BY wd.week_date
        ]]>
    </select>

    <!-- 월별 구독자 통계 -->
    <select id="getSubscriberStatsMonthly" resultType="org.example.fanzip.influencer.dto.SubscriberStatsResponseDTO" parameterType="long">
        SELECT 
            DATE_FORMAT(CURDATE(), '%Y-%m') as date,
            COALESCE(COUNT(m.membership_id), 0) as subscriberCount
        FROM (SELECT 1 as dummy) d
        LEFT JOIN memberships m ON 
            DATE_FORMAT(m.subscription_start, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m')
            AND m.influencer_id = #{influencerId}
            AND m.status = 'ACTIVE'
    </select>

    <!-- 주별 구독자 누적 추이 -->
    <select id="getSubscriberTrendsWeekly" resultType="org.example.fanzip.influencer.dto.SubscriberTrendResponseDTO" parameterType="long">
        <![CDATA[
        WITH RECURSIVE week_days AS (
            SELECT DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY) as week_date
            UNION ALL
            SELECT DATE_ADD(week_date, INTERVAL 1 DAY)
            FROM week_days
            WHERE week_date < DATE_ADD(DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL 6 DAY)
        ),
        daily_totals AS (
            SELECT 
                wd.week_date,
                (
                    SELECT COUNT(*)
                    FROM memberships m
                    WHERE m.influencer_id = #{influencerId}
                    AND m.status = 'ACTIVE'
                    AND DATE(m.subscription_start) <= wd.week_date
                    AND (m.subscription_end IS NULL OR DATE(m.subscription_end) > wd.week_date)
                ) as total_subscribers
            FROM week_days wd
        ),
        daily_changes AS (
            SELECT 
                week_date,
                total_subscribers,
                total_subscribers - LAG(total_subscribers, 1, total_subscribers) OVER (ORDER BY week_date) as change_from_previous
            FROM daily_totals
        )
        SELECT 
            DATE_FORMAT(week_date, '%Y-%m-%d') as date,
            total_subscribers as totalSubscribers,
            change_from_previous as changeFromPrevious
        FROM daily_changes
        ORDER BY week_date
        ]]>
    </select>

    <!-- 실시간 구독자 현황 -->
    <select id="getSubscriberStatus" resultType="org.example.fanzip.influencer.dto.SubscriberStatusResponseDTO" parameterType="long">
        <![CDATA[
        SELECT 
            #{influencerId} as influencerId,
            (
                SELECT COUNT(*)
                FROM memberships
                WHERE influencer_id = #{influencerId}
                AND status = 'ACTIVE'
                AND (subscription_end IS NULL OR subscription_end > NOW())
            ) as totalSubscribers,
            (
                (
                    SELECT COUNT(*)
                    FROM memberships
                    WHERE influencer_id = #{influencerId}
                    AND DATE(subscription_start) = CURDATE()
                    AND status = 'ACTIVE'
                ) - (
                    SELECT COUNT(*)
                    FROM memberships
                    WHERE influencer_id = #{influencerId}
                    AND DATE(subscription_end) = CURDATE()
                    AND status = 'CANCELLED'
                )
            ) as todayNetChange
        ]]>
    </select>

</mapper>
