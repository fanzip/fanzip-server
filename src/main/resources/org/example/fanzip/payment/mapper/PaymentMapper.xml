<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--결제 등록-->
<mapper namespace="org.example.fanzip.payment.mapper.PaymentMapper">
    <resultMap id="PaymentResultMap" type="org.example.fanzip.payment.domain.Payments">
        <id property="paymentId" column="payment_id"/>
        <result property="userId" column="user_id"/>
        <result property="orderId" column="order_id"/>
        <result property="reservationId" column="reservation_id"/>
        <result property="membershipId" column="membership_id"/>
        <result property="paymentType" column="payment_type"/>
        <result property="paymentMethod" column="payment_method"/>
        <result property="amount" column="amount"/>
        <result property="status" column="status"/>
        <result property="transactionId" column="transaction_id"/>
        <result property="paidAt" column="paid_at"/>
        <result property="cancelledAt" column="cancelled_at"/>
        <result property="refundedAt" column="refunded_at"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>
    <insert id="insertPayment" parameterType="org.example.fanzip.payment.domain.Payments"
            useGeneratedKeys="true" keyProperty="paymentId">
        INSERT INTO payments(
            user_id, order_id, reservation_id, membership_id, payment_type,
            payment_method, amount, status, transaction_id,
            paid_at, cancelled_at, refunded_at, created_at
        )
        VALUES (
                   #{userId}, #{orderId}, #{reservationId}, #{membershipId}, #{paymentType},
                   #{paymentMethod}, #{amount}, #{status}, #{transactionId},
                   #{paidAt}, #{cancelledAt}, #{refundedAt}, #{createdAt}
               )
    </insert>
    <!--결제 조회-->
    <select id="selectPayment" parameterType="long" resultMap="PaymentResultMap">
        SELECT *
        FROM payments
        WHERE payment_id = #{paymentId}
    </select>
    <!-- 사용자 ID로 결제 목록 조회 -->
    <select id="selectPaymentsByUserId" parameterType="long" resultMap="PaymentResultMap">
        SELECT *
        FROM payments
        WHERE user_id = #{userId}
        ORDER BY created_at DESC
    </select>
    <!--멤버십 결제 유무 확인-->
    <select id="existsByMembershipId" resultType="boolean" parameterType="map">
        SELECT EXISTS (
            SELECT 1
            FROM payments
            WHERE user_id = #{userId}
              AND membership_id = #{membershipId}
              AND payment_type = 'MEMBERSHIP'
              AND status IN ('PENDING', 'PAID')
        )
    </select>
    <!--결제 상태 변경-->
    <update id="updatePayment" parameterType="map">
        UPDATE payments
        SET status = #{status}
        WHERE payment_id = #{paymentId}
    </update>
    <!--transacionId 중복 검사-->
    <select id="existsByTransactionId" parameterType="string" resultType="boolean">
        SELECT EXISTS (
            SELECT 1 FROM payments WHERE transaction_id = #{transactionId}
        )
    </select>
</mapper>
