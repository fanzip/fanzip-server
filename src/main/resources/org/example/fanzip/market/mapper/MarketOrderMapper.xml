<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.fanzip.market.mapper.MarketOrderMapper">
    <!-- 주문 추가 -->
    <insert id="insertOrder" parameterType="map" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO orders(user_id, final_amount, status, recipient_name, recipient_phone, shipping_address1, shipping_address2, zipcode, ordered_at)
        VALUES
            (#{userId},
             #{finalAmount},
             #{status},
             #{recipientName},
             #{recipientPhone},
             #{shippingAddress1},
             #{shippingAddress2},
             #{zipcode},
            CURRENT_TIMESTAMP
            )
    </insert>

    <!-- 주문 상세 추가 -->
    <insert id="insertOrderItems" parameterType="map">
        INSERT INTO order_items
        (order_id, cart_item_id, influencer_id, product_id, quantity, unit_price, shipping_price, final_price, created_at)
        VALUES
        <foreach collection="items" item="item" separator=",">
            (#{orderId}, #{item.cartItemId}, #{item.influencerId}, #{item.productId},  #{item.quantity}, #{item.unitPrice}, #{item.shippingPrice}, #{item.finalPrice}, CURRENT_TIMESTAMP)
        </foreach>
    </insert>

    <!-- 주문 상세 조회 -->
    <select id="selectOrderItems" parameterType="long" resultType="org.example.fanzip.market.dto.MarketOrderItemDto">
        SELECT
            cart_item_id as cartItemId,
            product_id as productId,
            influencer_id as influencerId,
            quantity,
            unit_price as unitPrice,
            shipping_price as shippingPrice,
            final_price as finalPrice
        FROM order_items
        WHERE order_id = #{orderId}
    </select>

    <select id="selectCartItemIdsByOrderId" parameterType="long" resultType="long">
        SELECT ci.cart_item_id
        FROM order_items oi JOIN cart_items ci
        ON oi.cart_item_id = ci.cart_item_id
        WHERE oi.order_id = #{orderId}
        AND oi.cart_item_id IS NOT NULL
    </select>

    <delete id="deleteCartItemsByIds" parameterType="list">
        DELETE FROM cart_items
        WHERE cart_item_id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <update id="updateOrderStatus" parameterType="map">
        UPDATE orders SET status=#{status} WHERE order_id=#{orderId}
    </update>

    <!-- 재고차감 -->
    <update id="decreaseProductStock" parameterType="map">
        UPDATE products
        SET stock = stock - #{quantity}
        WHERE product_id = #{productId} AND stock >= #{quantity}
    </update>

    <update id="updateOrderStatusIfCurrent" parameterType="map">
        UPDATE orders
        SET status = #{newStatus}
        WHERE order_id = #{orderId}
          AND status = #{currentStatus}
    </update>

    <select id="selectOrderStatus" parameterType="long">
        SELECT status FROM orders WHERE order_id = #{orderId}
    </select>

    <delete id="deleteOrderItemsByOrderId" parameterType="long">
        DELETE FROM order_items WHERE order_id=#{orderId}
    </delete>

    <delete id="deleteOrderById" parameterType="long">
        DELETE FROM orders WHERE order_id=#{orderId}
    </delete>
</mapper>
